---
kind: pipeline
type: docker
name: default
globals:
  - &docker_creds
    username:
      from_secret: docker_user
    password:
      from_secret: docker_password
steps:
  - name: prepare
    image: busybox
    commands:
      - mkdir -p /cache/${DRONE_REPO}/docker
    volumes:
      - name: cache
        path: /cache
  - name: env_prod
    image: nightfuryest/drone-plugin-secret-to-env
    settings:
      template: .deploy/.env.prod.template
      file: .env
      envs:
        - APP_URL_PROD
        - ADMIN_URL_PROD
        - DB_NAME_PROD
        - DB_USER_PROD
        - DB_PASSWORD_PROD
      APP_URL_PROD:
        from_secret: APP_URL_PROD
      ADMIN_URL_PROD:
        from_secret: ADMIN_URL_PROD
      DB_NAME_PROD:
        from_secret: DB_NAME_PROD
      DB_USER_PROD:
        from_secret: DB_USER_PROD
      DB_PASSWORD_PROD:
        from_secret: DB_PASSWORD_PROD
    when:
      branch:
        - production
  - name: install
    image: nightfuryest/php-composer
    commands:
      - composer install
    environment:
      COMPOSER_CACHE_DIR: /composer
    volumes:
      - name: composer
        path: /composer
    when:
      branch:
        - production
  - name: compress
    image: kramos/alpine-zip
    commands:
      - zip -r workspace.zip * .*
    when:
      branch:
        - production
  - name: transfer
    image: appleboy/drone-scp
    settings:
      host: sv1app.webpress.vn
      username: root
      key:
        from_secret: SERVER_PROD_SECRET_KEY
      port: 1080
      target: /var/www/web/p16001.webpress.vn
      source: workspace.zip
  - name: deploy
    image: appleboy/drone-ssh
    settings:
      host: sv1app.webpress.vn
      ssh_key:
        from_secret: SERVER_PROD_SECRET_KEY
      port: 1080
      script_stop: true
      script:
        - cd /var/www/web/p16001.webpress.vn
        - rm -rf /var/www/web/p16001.webpress.vn/workspace
        - unzip workspace.zip -d workspace
        - rm -rf /var/www/web/p16001.webpress.vn/workspace.zip
    when:
      branch:
        - production
volumes:
  - name: cache
    host:
      path: /var/cache
  - name: docker
    host:
      path: /var/cache/${DRONE_REPO}/docker
  - name: composer
    host:
      path: /var/cache/${DRONE_REPO}/composer

trigger:
  branch:
    - production
