---
kind: pipeline
type: docker
name: default
globals:
  - &docker_creds
    username:
      from_secret: docker_user
    password:
      from_secret: docker_password
steps:
  - name: prepare
    image: busybox
    commands:
      - mkdir -p /cache/${DRONE_REPO}/docker
    volumes:
      - name: cache
        path: /cache
  - name: env_prod
    image: nightfuryest/drone-plugin-secret-to-env
    settings:
      template: .deploy/.env.prod.template
      file: .env
      envs:
        - APP_URL_PROD
        - ADMIN_URL_PROD
        - DB_NAME_PROD
        - DB_USER_PROD
        - DB_PASSWORD_PROD
      APP_URL_PROD:
        from_secret: APP_URL_PROD
      ADMIN_URL_PROD:
        from_secret: ADMIN_URL_PROD
      DB_NAME_PROD:
        from_secret: DB_NAME_PROD
      DB_USER_PROD:
        from_secret: DB_USER_PROD
      DB_PASSWORD_PROD:
        from_secret: DB_PASSWORD_PROD
    when:
      branch:
        - production
  # - name: install
  #   image: nightfuryest/php-composer
  #   commands:
  #     - composer install
  #   environment:
  #     COMPOSER_CACHE_DIR: /composer
  #   volumes:
  #     - name: composer
  #       path: /composer
  #   when:
  #     branch:
  #       - production
  - name: compress
    image: kramos/alpine-zip
    commands:
      - zip -r workspace.zip *
    when:
      branch:
        - production
  - name: scp files
    image: appleboy/drone-scp
    settings:
      host: sv1app.webpress.vn
      username: root
      password:
        from_secret: SERVER_PROD_PASSWORD
      port: 22
      target: /var/www/web/p16001.webpress.vn
      source: workspace.zip
volumes:
  - name: cache
    host:
      path: /var/cache
  - name: docker
    host:
      path: /var/cache/${DRONE_REPO}/docker
  - name: composer
    host:
      path: /var/cache/${DRONE_REPO}/composer

trigger:
  branch:
    - production
